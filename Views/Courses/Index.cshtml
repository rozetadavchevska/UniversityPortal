@using UniversityPortal.ViewModels
@model CourseFilterViewModel

@{
    ViewData["Title"] = "Courses";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    body {
        background-color: #F1F0E8;
        color: #213555;
    }

    h2 {
        color: #213555;
        margin-bottom: 30px;
    }

    .btn-custom {
        background-color: #213555;
        color: #F1F0E8;
        border: none;
        transition: background-color 0.3s ease;
    }

        .btn-custom:hover {
            background-color: #3E5879;
            color: #F1F0E8;
        }

    .course-card {
        background-color: #ffffff;
        border-radius: 10px;
        padding: 20px;
        margin-bottom: 20px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .course-details {
        flex: 1;
    }

    .course-title {
        font-size: 1.25rem;
        font-weight: 600;
        margin-bottom: 5px;
    }

    .course-meta {
        font-size: 0.9rem;
        color: #555;
    }

    .action-links a {
        margin-left: 15px;
        color: #213555;
        text-decoration: none;
        font-size: 0.9rem;
    }

        .action-links a:hover {
            color: #3E5879;
            text-decoration: underline;
        }

    .add-button {
        margin-bottom: 20px;
    }

    .badge {
        font-size: 0.85rem;
        padding: 0.5em 0.75em;
        background-color: #F1F0E8;
        color: #213555;
        border-radius: 20px;
        border: solid 1px #213555;
    }

        .badge:hover {
            color: #213555;
        }


    #filtersPanel {
        overflow: hidden;
        max-height: 0;
        padding: 0 1rem;
        transition: max-height 0.4s ease, padding 0.4s ease;
        background-color: #ffffff;
        border-radius: 5px;
    }

        #filtersPanel.open {
            max-height: 500px;
            padding-top: 1rem;
            padding-bottom: 1rem;
        }
</style>

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center">
        <h2>Courses</h2>
        <a asp-action="Create" class="btn btn-custom add-button">➕ Add New Course</a>
    </div>

    <form method="get" id="filterForm">
        <div class="d-flex justify-content-start align-items-center mb-3">

            <div>
                <button type="button" class="btn d-flex align-items-center p-2 btn-custom" id="toggleFilters">
                    <span class="material-symbols-outlined">tune</span>
                    Filters
                </button>
            </div>

            <div class="d-flex align-items-center">
                @if (!string.IsNullOrEmpty(Model.Title) || Model.Semester.HasValue || !string.IsNullOrEmpty(Model.Programme))
                {
                    <div class="">
                        <div class="d-inline-flex flex-wrap align-items-center gap-2 ms-2">
                            @if (!string.IsNullOrEmpty(Model.Title))
                            {
                                <a class="badge text-decoration-none" href="@Url.Action("Index", new { semester = Model.Semester, programme = Model.Programme })">
                                    Title: @Model.Title <span class="ms-1">×</span>
                                </a>
                            }
                            @if (Model.Semester.HasValue)
                            {
                                <a class="badge text-decoration-none" href="@Url.Action("Index", new { title = Model.Title, programme = Model.Programme })">
                                    Semester: @Model.Semester <span class="ms-1">×</span>
                                </a>
                            }
                            @if (!string.IsNullOrEmpty(Model.Programme))
                            {
                                <a class="badge text-decoration-none" href="@Url.Action("Index", new { title = Model.Title, semester = Model.Semester })">
                                    Programme: @Model.Programme <span class="ms-1">×</span>
                                </a>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>

        <div id="filtersPanel" class="border mb-3">
            <div class="row">
                <div class="col-md-4 mb-2">
                    <label for="title" class="form-label">Title</label>
                    <input type="text" id="title" name="title" class="form-control form-control-sm"
                           value="@Model.Title" placeholder="e.g. Algorithms" />
                </div>
                <div class="col-md-4 mb-2">
                    <label for="semester" class="form-label">Semester</label>
                    <select name="Semester" id="semester" class="form-select form-select-sm">
                        <option value="">All</option>
                        @for (int i = 1; i <= 8; i++)
                        {
                            if (Model.Semester == i)
                            {
                                <option value="@i" selected>Semester @i</option>
                            }
                            else
                            {
                                <option value="@i">Semester @i</option>
                            }
                        }
                    </select>
                </div>
                <div class="col-md-4 mb-2">
                    <label for="programme" class="form-label">Programme</label>
                    <input type="text" id="programme" name="programme" class="form-control form-control-sm"
                           value="@Model.Programme" placeholder="e.g. Computer Science" />
                </div>
            </div>
            <div class="text-end">
                <button type="submit" class="btn btn-sm btn-custom mt-2">Apply Filters</button>
            </div>
        </div>
    </form>



    <div class="row">
        @foreach (var course in Model.Courses)
        {
            <div class="col-md-6">
                <div class="course-card">
                    <div class="course-details">
                        <div class="course-title">@course.Title</div>
                        <div class="course-meta">
                            Credits: @course.Credits | Semester: @course.Semester
                        </div>
                    </div>
                    <div class="action-links">
                        <a asp-action="Edit" asp-route-id="@course.Id"><i class="fas fa-edit"></i></a>
                        <a asp-action="Details" asp-route-id="@course.Id"><i class="fas fa-info-circle"></i></a>
                        <a asp-action="Delete" asp-route-id="@course.Id"><i class="fas fa-trash"></i></a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('toggleFilters').addEventListener('click', function () {
            const panel = document.getElementById('filtersPanel');
            panel.classList.toggle('open');
        });
    </script>
}
