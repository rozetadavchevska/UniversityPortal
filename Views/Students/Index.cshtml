@using UniversityPortal.ViewModels
@model StudentFilterViewModel
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Authorization
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Students";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    body {
        background-color: #F1F0E8;
        color: #213555;
    }

    h2 {
        color: #213555;
        margin-bottom: 30px;
    }

    .btn-custom {
        background-color: #213555;
        color: #F1F0E8;
        border: none;
        transition: background-color 0.3s ease;
    }

        .btn-custom:hover {
            background-color: #3E5879;
            color: #F1F0E8;
        }

    .add-button {
        margin-bottom: 20px;
        display: flex;
        align-items: center;
    }

    .student-card {
        background-color: #ffffff;
        border-radius: 10px;
        padding: 20px;
        margin-bottom: 20px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .student-details {
        flex: 1;
    }

    .student-name {
        font-size: 1.25rem;
        font-weight: 700;
        margin-bottom: 5px;
        color: #213555;
        text-decoration: none;
    }

        .student-name:hover {
            color: #3E5879;
            text-decoration: underline;
        }

    .student-meta {
        font-size: 0.9rem;
        color: #555;
    }

    .action-links a {
        margin-left: 15px;
        color: #213555;
        text-decoration: none;
        font-size: 0.9rem;
    }

        .action-links a:hover {
            color: #3E5879;
            text-decoration: underline;
        }

    .badge {
        font-size: 0.85rem;
        padding: 0.5em 0.75em;
        background-color: #F1F0E8;
        color: #213555;
        border-radius: 20px;
        border: solid 1px #213555;
    }

        .badge:hover {
            color: #213555;
        }

    #filtersPanel {
        overflow: hidden;
        max-height: 0;
        padding: 0 1rem;
        transition: max-height 0.4s ease, padding 0.4s ease;
        background-color: #ffffff;
        border-radius: 5px;
    }

        #filtersPanel.open {
            max-height: 500px;
            padding-top: 1rem;
            padding-bottom: 1rem;
        }
</style>

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center">
        <h2>Students</h2>
        @if (User.IsInRole("Admin"))
        {
            <a asp-action="Create" class="btn btn-custom add-button">
                <span class="material-symbols-outlined">
                    add
                </span>  Add New Student
            </a>
        }
    </div>

    <form method="get" id="filterForm">
        <div class="d-flex justify-content-start align-items-center mb-3">
            <div>
                <button type="button" class="btn d-flex align-items-center p-2 btn-custom" id="toggleFilters">
                    <span class="material-symbols-outlined">tune</span>
                    Filters
                </button>
            </div>

            <div class="d-flex align-items-center">
                @if (!string.IsNullOrEmpty(Model.StudentId) || !string.IsNullOrEmpty(Model.FirstName) || !string.IsNullOrEmpty(Model.LastName))
                {
                    <div class="d-inline-flex flex-wrap align-items-center gap-2 ms-2">
                        @if (!string.IsNullOrEmpty(Model.StudentId))
                        {
                            <a class="badge text-decoration-none" href="@Url.Action("Index", new { firstName = Model.FirstName, lastName = Model.LastName })">
                                ID: @Model.StudentId <span class="ms-1">×</span>
                            </a>
                        }
                        @if (!string.IsNullOrEmpty(Model.FirstName))
                        {
                            <a class="badge text-decoration-none" href="@Url.Action("Index", new { studentId = Model.StudentId, lastName = Model.LastName })">
                                First Name: @Model.FirstName <span class="ms-1">×</span>
                            </a>
                        }
                        @if (!string.IsNullOrEmpty(Model.LastName))
                        {
                            <a class="badge text-decoration-none" href="@Url.Action("Index", new { studentId = Model.StudentId, firstName = Model.FirstName })">
                                Last Name: @Model.LastName <span class="ms-1">×</span>
                            </a>
                        }
                    </div>
                }
            </div>
        </div>

        <div id="filtersPanel" class="border mb-3">
            <div class="row">
                <div class="col-md-4 mb-2">
                    <label for="studentId" class="form-label">Student ID</label>
                    <input type="text" name="StudentId" id="studentId" class="form-control form-control-sm"
                           value="@Model.StudentId" placeholder="e.g. 12345" />
                </div>
                <div class="col-md-4 mb-2">
                    <label for="firstName" class="form-label">First Name</label>
                    <input type="text" name="FirstName" id="firstName" class="form-control form-control-sm"
                           value="@Model.FirstName" placeholder="e.g. John" />
                </div>
                <div class="col-md-4 mb-2">
                    <label for="lastName" class="form-label">Last Name</label>
                    <input type="text" name="LastName" id="lastName" class="form-control form-control-sm"
                           value="@Model.LastName" placeholder="e.g. Smith" />
                </div>
            </div>
            <div class="text-end">
                <button type="submit" class="btn btn-sm btn-custom mt-2">Apply Filters</button>
            </div>
        </div>
    </form>

    <div class="row">
        @foreach (var student in Model.Students)
        {
            <div class="col-md-4">
                <div class="student-card">
                    <div class="student-details">
                        <a asp-action="Details" asp-route-id="@student.Id" class="student-name">@student.FirstName @student.LastName</a>
                        <div class="student-meta">
                            Student ID: @student.StudentId<br />
                        </div>
                    </div>
                    @if (User.IsInRole("Admin"))
                    {
                        <div class="action-links">
                            <a asp-action="Edit" asp-route-id="@student.Id"><i class="fas fa-edit"></i></a>
                            <a asp-action="Details" asp-route-id="@student.Id"><i class="fas fa-info-circle"></i></a>
                            <a asp-action="Delete" asp-route-id="@student.Id"><i class="fas fa-trash"></i></a>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('toggleFilters').addEventListener('click', function () {
            const panel = document.getElementById('filtersPanel');
            panel.classList.toggle('open');
        });
    </script>
}
